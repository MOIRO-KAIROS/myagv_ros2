cmake_minimum_required(VERSION 3.8)
project(myagv_bringup)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(tf2 REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)

# include directories
include_directories(
  include
)

# build
add_executable(myagv_odometry_node src/myAGV.cpp src/myAGVSub.cpp)
ament_target_dependencies(myagv_odometry_node rclcpp geometry_msgs nav_msgs tf2 tf2_ros tf2_geometry_msgs sensor_msgs)

# add_executable(myagv_start src/myagv_start.cpp src/myagv_start_sub.cpp)
# ament_target_dependencies(myagv_start rclcpp geometry_msgs nav_msgs tf2 sensor_msgs)

# install
install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}
)

install(TARGETS
  myagv_odometry_node
  DESTINATION lib/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
